{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a filled two-dimensional symmetric nested array according to a provided callback function.\n*\n* @param {NonNegativeInteger} N - number of rows and columns\n* @param {Callback} clbk - callback function\n* @param {*} [thisArg] - callback function execution context\n* @returns {Array} filled array\n*\n* @example\n* function clbk( indices ) {\n*     return indices[ 0 ] + indices[ 1 ];\n* }\n*\n* var out = filled2dBy( 3, clbk );\n* // returns [ [ 0, 1, 2 ], [ 1, 2, 3 ], [ 2, 3, 4 ] ]\n*\n* @example\n* function clbk( indices ) {\n*     return indices[ 0 ] + indices[ 1 ];\n* }\n*\n* var out = filled2dBy( 4, clbk );\n* // returns [ [ 0, 1, 2, 3 ], [ 1, 2, 3, 4 ], [ 2, 3, 4, 5 ], [ 3, 4, 5, 6 ] ]\n*/\nfunction filled2dBy( N, clbk, thisArg ) {\n\tvar arr;\n\tvar a0;\n\tvar i;\n\tvar j;\n\n\t// Manually push elements in order to ensure \"fast\" elements...\n\tarr = [];\n\tfor ( i = 0; i < N; i++ ) {\n\t\ta0 = [];\n\t\tfor ( j = 0; j < N; j++ ) {\n\t\t\tif ( i > j ) {\n\t\t\t\ta0.push( arr[ j ][ i ] );\n\t\t\t} else {\n\t\t\t\ta0.push( clbk.call( thisArg, [ i, j ] ) );\n\t\t\t}\n\t\t}\n\t\tarr.push( a0 );\n\t}\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nmodule.exports = filled2dBy;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a filled two-dimensional symmetric nested array according to a provided callback function.\n*\n* @module @stdlib/array-base-symmetric-filled2d-by\n*\n* @example\n* var filled2dBy = require( '@stdlib/array-base-symmetric-filled2d-by' );\n*\n* function clbk( indices ) {\n*     return indices[ 0 ] + indices[ 1 ];\n* }\n*\n* var out = filled2dBy( 3, clbk );\n* // returns [ [ 0, 1, 2 ], [ 1, 2, 3 ], [ 2, 3, 4 ] ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cA8CA,SAASC,EAAYC,EAAGC,EAAMC,EAAU,CACvC,IAAIC,EACAC,EACAC,EACAC,EAIJ,IADAH,EAAM,CAAC,EACDE,EAAI,EAAGA,EAAIL,EAAGK,IAAM,CAEzB,IADAD,EAAK,CAAC,EACAE,EAAI,EAAGA,EAAIN,EAAGM,IACdD,EAAIC,EACRF,EAAG,KAAMD,EAAKG,CAAE,EAAGD,CAAE,CAAE,EAEvBD,EAAG,KAAMH,EAAK,KAAMC,EAAS,CAAEG,EAAGC,CAAE,CAAE,CAAE,EAG1CH,EAAI,KAAMC,CAAG,CACd,CACA,OAAOD,CACR,CAKAL,EAAO,QAAUC,ICjCjB,IAAIQ,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "filled2dBy", "N", "clbk", "thisArg", "arr", "a0", "i", "j", "main"]
}
